server:
  port: 80

security:
  refresh_token:
    live: '1000000'
    secret_key: 432A462D4A614E645267556B586E3272357538782F413F4428472B4B62506553
  access_token:
    secret_key: 4125442A472D4B6150645367566B59703373357638792F423F4528482B4D6251
    live: '10000000'
  temporary_token:
    secret_key: 432A462D4A614E645267556B586E3272357538782F413F4428472B4B62506553
    live: '60000'

spring:
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
  datasource:
    url: jdbc:postgresql://ep-withered-violet-751927.ap-southeast-1.aws.neon.tech/CompilerBot?user=nazarovv2&password=oHBE4jGNlW7K
    password: oHBE4jGNlW7K
    username: nazarovv2
  cache:
    cache-names: buckets

bucket4j:
  filters[0]:
    http-response-body: '{ "message": "Too many requests" }'
    rate-limits[0]:
      bandwidths[0]:
        time: '30'
        capacity: '22'
        unit: seconds
    metrics:
      enabled: 'true'
    url: .*
    cache-name: buckets
  enabled: 'true'

bot:
  name: ${BOT_NAME}
  token: ${BOT_TOKEN}

aws:
  credentials:
    access-key: ${AWS_CREDENTIALS_ACCESS_KEY}
    secret-key: ${AWS_CREDENTIALS_SECRET_KEY}
  s3:
    bucket:
      region:
        static: ${AWS_S3_BUCKET_REGION_STATIC}
    stack:
      auto: ${AWS_S3_BUCKET_STACK_AUTO}
    name: ${AWS_S3_BUCKET_NAME}